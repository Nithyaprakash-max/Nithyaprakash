// Mobile menu toggle
const menuBtn = document.getElementById('menuBtn');
const menu = document.getElementById('menu');
menuBtn?.addEventListener('click', () => {
  const isOpen = getComputedStyle(menu).display !== 'none';
  menu.style.display = isOpen ? 'none' : 'flex';
});

// Active link on scroll
const sections = ['home','about','skills','projects','contact'];
const navLinks = Array.from(document.querySelectorAll('nav a'));
const observer = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      const id = entry.target.id;
      navLinks.forEach(a =>
        a.classList.toggle('active', a.getAttribute('href') === '#' + id)
      );
    }
  });
}, { rootMargin: '-40% 0px -55% 0px', threshold: 0.0 });

sections.forEach(id => {
  const el = document.getElementById(id);
  if (el) observer.observe(el);
});

// Footer year
document.getElementById('year').textContent = new Date().getFullYear();

// Contact form (front-end only)
const form = document.getElementById('contactForm');
const status = document.getElementById('formStatus');
form?.addEventListener('submit', (e) => {
  e.preventDefault();
  const data = Object.fromEntries(new FormData(form).entries());
  const errors = [];

  if (!data.name) errors.push('Name is required');
  if (!data.email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(data.email))
    errors.push('Valid email is required');
  if (!data.message) errors.push('Message is required');

  if (errors.length) {
    status.textContent = 'Please fix: ' + errors.join(', ');
    return;
  }

  // In real use, send to a backend or service like Formspree
  status.textContent = 'Thanks! Your message has been prepared (demo only).';
  form.reset();
});